{"version":3,"file":"decoder.js","sources":["../src/decoder.ts"],"sourcesContent":["// import { Maybe, some, none } from \"./maybe\";\n\nexport const OK = \"OK\";\nexport const ERR = \"ERR\";\nexport type Ok<T> = {\n  type: typeof OK;\n  value: T;\n  map: <T2>(func: (t: T) => T2) => Result<T2>;\n};\nexport type Err<T> = {\n  type: typeof ERR;\n  message: string;\n  map: <T2>(func: (t: T) => T2) => Result<T2>;\n};\nexport type Result<T> = Ok<T> | Err<T>;\n\nexport const ok = <T>(value: T): Result<T> => ({\n  type: OK,\n  value,\n  map: func => ok(func(value))\n});\nexport const err = <T>(message: string): Result<T> => ({\n  type: ERR,\n  message,\n  map: func => err(message)\n});\n\nexport type Decoder<T> = {\n  decode: (a: unknown) => Result<T>;\n  decodeAsync: (a: unknown) => Promise<T>;\n  map: <T2>(func: (t: T) => T2) => Decoder<T2>;\n  then: <T2>(nextDecoder: Decoder<T2>) => Decoder<T2>;\n};\n\nexport const decoder = <T>(decode: (a: unknown) => Result<T>): Decoder<T> => ({\n  decode,\n  decodeAsync: (a: unknown) =>\n    new Promise<T>((accept, reject) => {\n      const res = decode(a);\n      switch (res.type) {\n        case OK:\n          return accept(res.value);\n        case ERR:\n          return reject(new Error(res.message));\n      }\n    }),\n  map: <T2>(func: (t: T) => T2) =>\n    decoder<T2>((b: unknown) => {\n      const res = decode(b);\n      switch (res.type) {\n        case OK:\n          return ok(func(res.value));\n        case ERR:\n          return (res as unknown) as Err<T2>;\n      }\n    }),\n  then: <T2>(nextDecoder: Decoder<T2>) =>\n    allOfDecoders(decoder(decode), nextDecoder)\n});\n\ntype ArrayDecoder<T> = Decoder<T[]>;\ntype DecoderMap<T> = { [K in keyof T]: Decoder<T[K]> };\n\nexport const stringDecoder: Decoder<string> = decoder((a: unknown) =>\n  typeof a === \"string\"\n    ? ok<string>(a as string)\n    : err(`expected string, got ${typeof a}`)\n);\n\nexport const numberDecoder: Decoder<number> = decoder((a: unknown) =>\n  typeof a === \"number\"\n    ? ok<number>(a as number)\n    : err(`expected number, got ${typeof a}`)\n);\n\nexport const boolDecoder: Decoder<boolean> = decoder((a: unknown) =>\n  typeof a === \"boolean\"\n    ? ok<boolean>(a as boolean)\n    : err(`expected boolean, got ${typeof a}`)\n);\n\nexport const nullDecoder: Decoder<null> = decoder((a: unknown) =>\n  a === null ? ok<null>(null) : err(`expected null, got ${typeof a}`)\n);\n\nexport const undefinedDecoder: Decoder<undefined> = decoder((a: unknown) =>\n  a === undefined\n    ? ok<undefined>(undefined)\n    : err(`expected undefined, got ${typeof a}`)\n);\n\nexport const arrayDecoder = <T>(itemDecoder: Decoder<T>): ArrayDecoder<T> =>\n  decoder((a: unknown) => {\n    if (Array.isArray(a)) {\n      const res: T[] = [];\n      for (const [index, item] of a.entries()) {\n        const itemResult = itemDecoder.decode(item);\n        switch (itemResult.type) {\n          case OK: {\n            res.push(itemResult.value);\n            continue;\n          }\n          case ERR:\n            return err(`array item ${index}: ${itemResult.message}`);\n        }\n      }\n      return ok(res);\n    } else return err(`expected array, got ${typeof a}`);\n  });\n\nexport const oneOfDecoders = <T>(...decoders: Decoder<T>[]): Decoder<T> =>\n  decoder((a: unknown) => {\n    for (const decoderTry of decoders) {\n      const result = decoderTry.decode(a);\n      switch (result.type) {\n        case OK:\n          return ok(result.value);\n        case ERR:\n          continue;\n      }\n    }\n    return err(`one of: none of decoders match`);\n  });\n\ntype LastElem<T extends number> = [-1, 0, 1, 2, 3, 4, 5][T];\ntype LastElemType<T extends unknown[]> = T[LastElem<T[\"length\"]>];\ntype LastDecoder<T extends Decoder<unknown>[]> = LastElemType<\n  T\n> extends Decoder<infer R>\n  ? R\n  : T[0];\n\nexport const allOfDecoders = <\n  TDecoders extends Decoder<unknown>[],\n  R = LastDecoder<TDecoders>\n>(\n  ...decoders: TDecoders\n): Decoder<R> =>\n  decoder((a: unknown) => {\n    return decoders.reduce(\n      (result: Result<R>, decoderNext: Decoder<unknown>) => {\n        switch (result.type) {\n          case OK:\n            return decoderNext.decode(result.value) as Result<R>;\n          default:\n            return err<R>(result.message);\n        }\n      },\n      ok<R>(a as R)\n    );\n  });\n\n// export const maybeDecoder = <T>(itemDecoder: Decoder<T>): Decoder<Maybe<T>> =>\n//   decoder((a: unknown) => {\n//     const res = oneOfDecoders(\n//       nullDecoder,\n//       undefinedDecoder,\n//       itemDecoder\n//     ).decode(a);\n//     switch (res.type) {\n//       case OK: {\n//         switch (res.value) {\n//           case undefined:\n//           case null:\n//             return ok(none<T>());\n//           default:\n//             return ok(some(res.value));\n//         }\n//       }\n//       case ERR:\n//         return err(res.message);\n//     }\n//   });\n\nexport const exactDecoder = <T>(value: T): Decoder<T> =>\n  decoder((a: unknown) =>\n    a === value ? ok(value) : err(`not exactly ${value}`)\n  );\n\nexport const objectDecoder = <T>(decoderMap: DecoderMap<T>): Decoder<T> =>\n  decoder((a: unknown) => {\n    if (typeof a === \"object\") {\n      const keys = Object.keys(decoderMap) as (keyof T)[];\n      const res: Partial<T> = {};\n      for (const key of keys) {\n        const fieldResult = decoderMap[key].decode(((a as unknown) as T)[key]);\n        switch (fieldResult.type) {\n          case OK: {\n            res[key] = fieldResult.value;\n            continue;\n          }\n          case ERR:\n            return err(`${key}: ${fieldResult.message}`);\n        }\n      }\n      return ok(res as T);\n    } else return err(`expected object, got ${typeof a}`);\n  });\n"],"names":[],"mappings":"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"}